export const nounsBuilderTokenAbi = [
  {
    inputs: [{ internalType: "address", name: "_manager", type: "address" }],
    stateMutability: "payable",
    type: "constructor",
  },
  { inputs: [], name: "ADDRESS_ZERO", type: "error" },
  { inputs: [], name: "ALREADY_INITIALIZED", type: "error" },
  { inputs: [], name: "ALREADY_MINTED", type: "error" },
  { inputs: [], name: "CANNOT_CHANGE_RESERVE", type: "error" },
  { inputs: [], name: "CANNOT_DECREASE_RESERVE", type: "error" },
  { inputs: [], name: "DELEGATE_CALL_FAILED", type: "error" },
  { inputs: [], name: "EXPIRED_SIGNATURE", type: "error" },
  { inputs: [], name: "INITIALIZING", type: "error" },
  { inputs: [], name: "INVALID_APPROVAL", type: "error" },
  { inputs: [], name: "INVALID_FOUNDER_OWNERSHIP", type: "error" },
  { inputs: [], name: "INVALID_OWNER", type: "error" },
  { inputs: [], name: "INVALID_RECIPIENT", type: "error" },
  { inputs: [], name: "INVALID_SIGNATURE", type: "error" },
  { inputs: [], name: "INVALID_TARGET", type: "error" },
  { inputs: [], name: "INVALID_TIMESTAMP", type: "error" },
  { inputs: [{ internalType: "address", name: "impl", type: "address" }], name: "INVALID_UPGRADE", type: "error" },
  { inputs: [], name: "NOT_INITIALIZING", type: "error" },
  { inputs: [], name: "NOT_MINTED", type: "error" },
  { inputs: [], name: "NO_METADATA_GENERATED", type: "error" },
  { inputs: [], name: "ONLY_AUCTION", type: "error" },
  { inputs: [], name: "ONLY_AUCTION_OR_MINTER", type: "error" },
  { inputs: [], name: "ONLY_CALL", type: "error" },
  { inputs: [], name: "ONLY_DELEGATECALL", type: "error" },
  { inputs: [], name: "ONLY_MANAGER", type: "error" },
  { inputs: [], name: "ONLY_OWNER", type: "error" },
  { inputs: [], name: "ONLY_PENDING_OWNER", type: "error" },
  { inputs: [], name: "ONLY_PROXY", type: "error" },
  { inputs: [], name: "ONLY_TOKEN_OWNER", type: "error" },
  { inputs: [], name: "ONLY_UUPS", type: "error" },
  { inputs: [], name: "REENTRANCY", type: "error" },
  { inputs: [], name: "TOKEN_NOT_RESERVED", type: "error" },
  { inputs: [], name: "UNSUPPORTED_UUID", type: "error" },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "owner", type: "address" },
      { indexed: true, internalType: "address", name: "approved", type: "address" },
      { indexed: true, internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "owner", type: "address" },
      { indexed: true, internalType: "address", name: "operator", type: "address" },
      { indexed: false, internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "delegator", type: "address" },
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "delegate", type: "address" },
      { indexed: false, internalType: "uint256", name: "prevTotalVotes", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "newTotalVotes", type: "uint256" },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "wallet", type: "address" },
          { internalType: "uint256", name: "ownershipPct", type: "uint256" },
          { internalType: "uint256", name: "vestExpiry", type: "uint256" },
        ],
        indexed: false,
        internalType: "struct IManager.FounderParams[]",
        name: "newFounders",
        type: "tuple[]",
      },
    ],
    name: "FounderAllocationsCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "uint256", name: "version", type: "uint256" }],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "address", name: "renderer", type: "address" }],
    name: "MetadataRendererUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "uint256", name: "baseTokenId", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "founderId", type: "uint256" },
      {
        components: [
          { internalType: "address", name: "wallet", type: "address" },
          { internalType: "uint8", name: "ownershipPct", type: "uint8" },
          { internalType: "uint32", name: "vestExpiry", type: "uint32" },
        ],
        indexed: false,
        internalType: "struct TokenTypesV1.Founder",
        name: "founder",
        type: "tuple",
      },
    ],
    name: "MintScheduled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "uint256", name: "baseTokenId", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "founderId", type: "uint256" },
      {
        components: [
          { internalType: "address", name: "wallet", type: "address" },
          { internalType: "uint8", name: "ownershipPct", type: "uint8" },
          { internalType: "uint32", name: "vestExpiry", type: "uint32" },
        ],
        indexed: false,
        internalType: "struct TokenTypesV1.Founder",
        name: "founder",
        type: "tuple",
      },
    ],
    name: "MintUnscheduled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "address", name: "minter", type: "address" },
      { indexed: false, internalType: "bool", name: "allowed", type: "bool" },
    ],
    name: "MinterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "owner", type: "address" },
      { indexed: true, internalType: "address", name: "canceledOwner", type: "address" },
    ],
    name: "OwnerCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "owner", type: "address" },
      { indexed: true, internalType: "address", name: "pendingOwner", type: "address" },
    ],
    name: "OwnerPending",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "prevOwner", type: "address" },
      { indexed: true, internalType: "address", name: "newOwner", type: "address" },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "uint256", name: "reservedUntilTokenId", type: "uint256" }],
    name: "ReservedUntilTokenIDUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      { indexed: true, internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "address", name: "impl", type: "address" }],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  { inputs: [], name: "acceptOwnership", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [
      { internalType: "address", name: "_to", type: "address" },
      { internalType: "uint256", name: "_tokenId", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "auction",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_owner", type: "address" }],
    name: "balanceOf",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { inputs: [], name: "cancelOwnershipTransfer", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [],
    name: "contractURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractVersion",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_to", type: "address" }],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_from", type: "address" },
      { internalType: "address", name: "_to", type: "address" },
      { internalType: "uint256", name: "_deadline", type: "uint256" },
      { internalType: "uint8", name: "_v", type: "uint8" },
      { internalType: "bytes32", name: "_r", type: "bytes32" },
      { internalType: "bytes32", name: "_s", type: "bytes32" },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_account", type: "address" }],
    name: "delegates",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
    name: "getApproved",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_founderId", type: "uint256" }],
    name: "getFounder",
    outputs: [
      {
        components: [
          { internalType: "address", name: "wallet", type: "address" },
          { internalType: "uint8", name: "ownershipPct", type: "uint8" },
          { internalType: "uint32", name: "vestExpiry", type: "uint32" },
        ],
        internalType: "struct TokenTypesV1.Founder",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFounders",
    outputs: [
      {
        components: [
          { internalType: "address", name: "wallet", type: "address" },
          { internalType: "uint8", name: "ownershipPct", type: "uint8" },
          { internalType: "uint32", name: "vestExpiry", type: "uint32" },
        ],
        internalType: "struct TokenTypesV1.Founder[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_account", type: "address" },
      { internalType: "uint256", name: "_timestamp", type: "uint256" },
    ],
    name: "getPastVotes",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
    name: "getScheduledRecipient",
    outputs: [
      {
        components: [
          { internalType: "address", name: "wallet", type: "address" },
          { internalType: "uint8", name: "ownershipPct", type: "uint8" },
          { internalType: "uint32", name: "vestExpiry", type: "uint32" },
        ],
        internalType: "struct TokenTypesV1.Founder",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_account", type: "address" }],
    name: "getVotes",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "wallet", type: "address" },
          { internalType: "uint256", name: "ownershipPct", type: "uint256" },
          { internalType: "uint256", name: "vestExpiry", type: "uint256" },
        ],
        internalType: "struct IManager.FounderParams[]",
        name: "_founders",
        type: "tuple[]",
      },
      { internalType: "bytes", name: "_initStrings", type: "bytes" },
      { internalType: "uint256", name: "_reservedUntilTokenId", type: "uint256" },
      { internalType: "address", name: "_metadataRenderer", type: "address" },
      { internalType: "address", name: "_auction", type: "address" },
      { internalType: "address", name: "_initialOwner", type: "address" },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_owner", type: "address" },
      { internalType: "address", name: "_operator", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_minter", type: "address" }],
    name: "isMinter",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataRenderer",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "amount", type: "uint256" },
      { internalType: "address", name: "recipient", type: "address" },
    ],
    name: "mintBatchTo",
    outputs: [{ internalType: "uint256[]", name: "tokenIds", type: "uint256[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "recipient", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "mintFromReserveTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "recipient", type: "address" }],
    name: "mintTo",
    outputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "minter",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_account", type: "address" }],
    name: "nonce",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  { inputs: [], name: "onFirstAuctionStarted", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingTokensInReserve",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservedUntilTokenId",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_from", type: "address" },
      { internalType: "address", name: "_to", type: "address" },
      { internalType: "uint256", name: "_tokenId", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_from", type: "address" },
      { internalType: "address", name: "_to", type: "address" },
      { internalType: "uint256", name: "_tokenId", type: "uint256" },
      { internalType: "bytes", name: "_data", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_newOwner", type: "address" }],
    name: "safeTransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_operator", type: "address" },
      { internalType: "bool", name: "_approved", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "contract IBaseMetadata", name: "newRenderer", type: "address" }],
    name: "setMetadataRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "newReservedUntilTokenId", type: "uint256" }],
    name: "setReservedUntilTokenId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "_interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_tokenId", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFounderOwnership",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFounders",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_from", type: "address" },
      { internalType: "address", name: "_to", type: "address" },
      { internalType: "uint256", name: "_tokenId", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "wallet", type: "address" },
          { internalType: "uint256", name: "ownershipPct", type: "uint256" },
          { internalType: "uint256", name: "vestExpiry", type: "uint256" },
        ],
        internalType: "struct IManager.FounderParams[]",
        name: "newFounders",
        type: "tuple[]",
      },
    ],
    name: "updateFounders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "minter", type: "address" },
          { internalType: "bool", name: "allowed", type: "bool" },
        ],
        internalType: "struct TokenTypesV2.MinterParams[]",
        name: "_minters",
        type: "tuple[]",
      },
    ],
    name: "updateMinters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_newImpl", type: "address" }],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_newImpl", type: "address" },
      { internalType: "bytes", name: "_data", type: "bytes" },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;
